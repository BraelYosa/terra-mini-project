{"ast":null,"code":"import axios from \"axios\";\nconst api = axios.create({\n  baseURL: \"http://localhost:1000\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nconsole.log(\"API base URL:\", api.defaults.baseURL);\n\n// Add a request interceptor to include the token if it exists\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    console.log(\"Token found, adding to request header:\", token);\n    config.headers.Authorization = `Bearer ${token}`;\n  } else {\n    console.log(\"No token found in localStorage.\");\n  }\n  console.log(\"Outgoing request config:\", config);\n  return config;\n}, error => {\n  console.error(\"Error in request interceptor:\", error);\n  return Promise.reject(error);\n});\n\n// Add a response interceptor to debug responses\napi.interceptors.response.use(response => {\n  console.log(\"API response:\", response);\n  return response;\n}, error => {\n  console.error(\"API error response:\", error.response);\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","console","log","defaults","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response"],"sources":["E:/Brandon/Code/Work/Terra/terra/frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:1000\", \r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nconsole.log(\"API base URL:\", api.defaults.baseURL);\r\n\r\n// Add a request interceptor to include the token if it exists\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (token) {\r\n    console.log(\"Token found, adding to request header:\", token);\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  } else {\r\n    console.log(\"No token found in localStorage.\");\r\n  }\r\n  console.log(\"Outgoing request config:\", config);\r\n  return config;\r\n}, (error) => {\r\n  console.error(\"Error in request interceptor:\", error);\r\n  return Promise.reject(error);\r\n});\r\n\r\n// Add a response interceptor to debug responses\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log(\"API response:\", response);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error(\"API error response:\", error.response);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEFC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEL,GAAG,CAACM,QAAQ,CAACJ,OAAO,CAAC;;AAElD;AACAF,GAAG,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTP,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEM,KAAK,CAAC;IAC5DD,MAAM,CAACP,OAAO,CAACW,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD,CAAC,MAAM;IACLP,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;EAChD;EACAD,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEK,MAAM,CAAC;EAC/C,OAAOA,MAAM;AACf,CAAC,EAAGK,KAAK,IAAK;EACZX,OAAO,CAACW,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;EACrD,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;;AAEF;AACAf,GAAG,CAACO,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAK;EACZd,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEa,QAAQ,CAAC;EACtC,OAAOA,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EACTX,OAAO,CAACW,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACG,QAAQ,CAAC;EACpD,OAAOF,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAef,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}